1.a) This one is O(1) because no matter how many people are in the room, it will always only take one action to find a playmate.
1.b) This one would be O(n) because you perform exactly one action for each person in the room.
2) The function itself is O(1), but if you have multiple values, you'd have to do the function multiple times, making the process O(n), but the function still O(1).
3) The function is O(n^2), because we have nested loops.  For each input element, the function has to take n^2 actions.
4) The function is O(n), because we have to perform the multiplication function for every index/piece of data.
5) The function is O(n), because we have to perform the search on every item in the array.
6) The function is O(n^2), because it loops over the array twice, so given an array of 5 elements, it will check each element 5 times, leading to 25 actions performed by the algorithm.
7) The function is O(n), where n refers to the magniturde of num, because the function performs the same number of actions as num gets bigger.
8) The function is O(logn), because as the dataset gets larger, the runtime increases at a proportionally much smaller rate.
9) The function is O(1), because no matter how big the array is, the function will only do one thing--select a random item. 
10) This function is checking to see if a num is a prime numbers.  The function is O(n) because the for loop depends on the the size of n.
